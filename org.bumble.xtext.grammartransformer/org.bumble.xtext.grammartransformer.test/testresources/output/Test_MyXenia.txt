// automatically generated by Xtext
grammar org.xtext.example.myxenia.MyXenia with org.eclipse.xtext.common.Terminals

import "http://www.foliage.com/xenia/Xenia" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
    {Model}
    
    
          headers+=Header  
          (entities+=Entity)*  
          (mapped_entities+=MappedEntity)*  
    ;

SuperSite returns SuperSite:
     SiteWithModal | Site;

Header returns Header:
    {Header}
    
        'app' appName=ID 'has'  'pages' 
         '[' sites+=SuperSite ( "," sites+=SuperSite)* ']' 
    ;

Entity returns Entity:
    {Entity}
    
        'with' ':' tech=STRING |
        'xml' ':' path=STRING |
        'mode' ':' mode=Mode
    ;

MappedEntity returns MappedEntity:
    {MappedEntity}
    
        'info' ':' '[' infoProps+=InfoProperty ( "," infoProps+=InfoProperty)* ']'  |
        'map' ':' '[' linkedProps+=LinkedProperty ( "," linkedProps+=LinkedProperty)* ']' 
    ;

SiteWithModal returns SiteWithModal:
    {SiteWithModal}
    '@'
    name=ID
        'with' 'modal' '(' sites+=SuperSite ( "," sites+=SuperSite)* ')' 
    ;

Site returns Site:
    {Site}
    '@'
    name=ID;

enum Mode returns Mode:
                DEV = 'development' | PROD = 'production';

InfoProperty returns InfoProperty:
    {InfoProperty}
    
    
         page=[Site]
        '->'  entities+=InfoEntity ( "," entities+=InfoEntity)*  
    ;

LinkedProperty returns LinkedProperty:
    {LinkedProperty}
    
    
         name=[Site]
        '->' '('page=RedirectPage')'
    ;

InfoEntity returns InfoEntity:
    {InfoEntity}
    
    
          entries+=InfoEntry  
        ':' infoValue=STRING
    ;

enum InfoEntry returns InfoEntry:
                MOD = 'mod' | FREQ = 'freq' | PRIO = 'prio';

RedirectPage returns RedirectPage:
    {RedirectPage}
    
    
          site+=[Site] ( "," site+=[Site])*  
    ;

